PART
{
// --- general parameters ---
name = Mir_Core_Module
module = Part
author = Bobcat, CrashnBurn
// --- asset parameters ---
//MODEL
//{
//  model = SovietPack/Parts/MIR/MIR_core/MIR_core
//}
mesh = MIR_core.mu
scale = 1
rescaleFactor = 1

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_right = 0.635, 3.8, 0.0, 1.0, 0.0, 0.0, 1
node_stack_left = -0.635, 3.8, 0.0, -1.0, 0.0, 0.0, 1

node_stack_rear = 0.0, 3.8, -0.635, 0.0, 0.0, -1.0, 1
node_stack_front = 0.0, 3.8, 0.635, 0.0, 0.0, 1.0, 1

node_stack_bottom = 0.0, -3.875, 0.0, 0.0, -1.0, 0.0, 2
node_stack_top = 0.0, 4.435, 0.0, 0.0, 1.0, 0.0, 1

// --- FX definitions ---

fx_exhaustFlame_blue_small = 0.0, -0.8, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_blue = 0.0, -0.8, 0.0, 0.0, 0.0, 1.0, running
fx_smokeTrail_light = 0.0, -1.3, 0.0, 0.0, 1.0, 0.0, running

// --- Sound FX definition ---

sound_vent_medium = engage
sound_rocket_hard = running
sound_vent_soft = disengage
sound_explosion_low = flameout


// --- editor parameters ---
TechRequired = advScienceTech
cost = 25000
entryCost = 15000
category = Science
subcategory = 0
title = DOS-7
manufacturer = Bobcat Ind
description = The base block for the entire Mir complex, the core module, or DOS-7, provided the main living quarters for resident hard russian cosmonauts and his bears. Contained environmental systems, early attitude control systems, the station's main engines and Ushanka hats.
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 5
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 45
breakingForce = 620
breakingTorque = 620
maxTemp = 2200
bulkheadProfiles = size2

vesselType = Station
CrewCapacity = 5
INTERNAL
{
	name = MIR_core
}
//***************************************************************
	MODULE
	{
		name = ModuleScienceContainer
		reviewActionName = Review Data
		storeActionName = Store Experiments
		collectActionName = Take Data
		evaOnlyStorage = True
		storageRange = 5
		allowRepeatedSubjects = True
	}
	MODULE
	{
		name = ModuleScienceLab
		containerModuleIndex = 0
		dataStorage = 500
		crewsRequired = 1
		canResetConnectedModules = True
		canResetNearbyModules = True
		interactionRange = 5
		SurfaceBonus = 0.1
		ContextBonus = 0.25
		homeworldMultiplier = 0.1
		RESOURCE_PROCESS
		{
			name = ElectricCharge
			amount = 10
		}
	}

	MODULE
	{
		name = ModuleScienceConverter
		scientistBonus = 0.25	//Bonus per scientist star - need at least one! So 0.25x - 2.5x 
		researchTime = 7	    //Larger = slower.  Exponential!
		scienceMultiplier = 5	//How much science does data turn into?
		scienceCap = 500	    //How much science can we store before having to transmit?		
		powerRequirement = 5	//EC/Sec to research
		ConverterName = Research
		StartActionName = Start Research
		StopActionName = Stop Research
	}
//***************************************************************


MODULE
{
	name = ModuleReactionWheel
	
	PitchTorque = 3
	YawTorque = 3
	RollTorque = 3
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.3
	}
}

MODULE
{
	name = ModuleSAS
	SASServiceLevel = 3
}

MODULE
{
	name = TankPriorityModule
	Priority = 20
}

MODULE
{
	name = ModuleCommand
	minimumCrew = 0
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.02
	}
}

RESOURCE
{
	name = ElectricCharge
	amount = 500
	maxAmount = 500
}

RESOURCE
{
	name = MonoPropellant
	amount = 750
	maxAmount = 750
}


MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = thrustTransform
	exhaustDamage = True
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 30
	heatProduction = 40
	PROPELLANT
	{
		name = MonoPropellant
       	ratio = 1.0
	}
	
	atmosphereCurve
 	{
		key = 0 410
		key = 1 280
 	}
	
}

MODULE
{
   name = ModuleAnimateGeneric
   animationName = hatch
   startEventGUIName = Open Hatch
   endEventGUIName = Close Hatch
}

MODULE
{
   name = ModuleAnimateGeneric
   animationName = core_ant
   startEventGUIName = Open Ant
   endEventGUIName = Close Ant
}
MODULE
{
	name = ModuleDataTransmitter
	
	packetInterval = 0.4
	packetSize = 2
	
	packetResourceCost = 10.0
	requiredResource = ElectricCharge
	
	DeployFxModules = 0
}



}
