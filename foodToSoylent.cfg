@PART[KKAOSS_LS_container_algae]:FOR[PlanetarySurfaceStructures]:NEEDS[UDASoylent]:FINAL
{

	!MODULE[ModuleKPBSConverter]{}

    MODULE
	{
		name = ModuleKPBSConverter
		ConverterName = Algae Farm 
		tag = Algae Farm
		StartActionName = Start cultivation
        StopActionName = Stop cultivation

		INPUT_RESOURCE
		{
			ResourceName = Waste
			Ratio =  0.000003534
		}
        INPUT_RESOURCE
		{
			ResourceName = SoylentStarter
			Ratio =  0.000000017265625	//0.0000210062
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.41
		}
		OUTPUT_RESOURCE
		{
			ResourceName = Fertilizer
			Ratio =  0.000003001
			DumpExcess = true
		}
	}

}


@PART[SETIgreenhouse1]:NEEDS[UDASoylent]:FINAL
{

	!MODULE[TacGenericConverter]:HAS[#conversionRate[1.02]]{}
	!MODULE[TacGenericConverter]:HAS[#converterName[SETI-Greenhouse]]{}
	!RESOURCE[Nutrients]{}

	%tags = cck-lifesupport

	MODULE
	{
		name = TacGenericConverter
		converterName = UDA-Greenhouse
		StartActionName = Start UDA-Greenhouse
		StopActionName = Stop UDA-Greenhouse

		// A scaling factor by which the resource amounts are multiplied
		conversionRate = 1.02

		// A comma separated list of resources to use as inputs.
		// For each resource, list the resource name and the amount (which
		// is multiplied by the conversionRate)
		//inputResources = CarbonDioxide, 0.00148012889876, WasteWater, 0.000014247685185, Waste, 0.000001539351852, Nutrients, 0.0000033854166666, ElectricCharge, 1.2
		INPUT_RESOURCE
        {
            ResourceName = CarbonDioxide
            Ratio = 0.00148012889876
        }
        INPUT_RESOURCE
        {
            ResourceName = WasteWater
            Ratio = 0.000014247685185
        }
        INPUT_RESOURCE
        {
            ResourceName = Waste
            Ratio = 0.000001539351852
        }
        INPUT_RESOURCE
        {
			ResourceName = SoylentStarter
			Ratio =  0.000000017265625	//0.0000033854166666
        }
        INPUT_RESOURCE
        {
            ResourceName = ElectricCharge
            Ratio = 1.2
        }

		// A comma separated list of resources to output. Same as above
		// but also specify whether it should keep converting if the
		// resource is full (generating excess that will be thrown away).
		//outputResources = Oxygen, 0.001713537562385, false, Water, 0.0000100692708336, false, Food, 0.000016927083333, false
		OUTPUT_RESOURCE
        {
            ResourceName = Oxygen
            Ratio = 0.001713537562385
            DumpExcess = false
        }
        OUTPUT_RESOURCE
        {
            ResourceName = Water
            Ratio = 0.0000100692708336
            DumpExcess = false
        }
        OUTPUT_RESOURCE
        {
            ResourceName = Food
            Ratio = 0.000016927083333
            DumpExcess = false
        }
	}

}


@PART[SETIgreenhouse3]:NEEDS[UDASoylent]:FINAL
{

	//!MODULE[TacGenericConverter]:HAS[#converterName[Food - Nutrients Converter]]{}
	!MODULE[TacGenericConverter]:HAS[#conversionRate[1.02]]{}
	!MODULE[TacGenericConverter]:HAS[#converterName[SETI-Greenhouse]]{}
	!RESOURCE[Nutrients]{}

	%tags = cck-lifesupport

		MODULE
	{
		name = TacGenericConverter
		converterName = UDA-Greenhouse
		StartActionName = Start UDA-Greenhouse
		StopActionName = Stop UDA-Greenhouse

		// A scaling factor by which the resource amounts are multiplied
		conversionRate = 3.06

		// A comma separated list of resources to use as inputs.
		// For each resource, list the resource name and the amount (which
		// is multiplied by the conversionRate)
		//inputResources = CarbonDioxide, 0.00148012889876, WasteWater, 0.000014247685185, Waste, 0.000001539351852, Nutrients, 0.0000033854166666, ElectricCharge, 1.2
        INPUT_RESOURCE
        {
            ResourceName = CarbonDioxide
            Ratio = 0.00148012889876
        }
        INPUT_RESOURCE
        {
            ResourceName = WasteWater
            Ratio = 0.000014247685185
        }
        INPUT_RESOURCE
        {
            ResourceName = Waste
            Ratio = 0.000001539351852
        }
        INPUT_RESOURCE
        {
			ResourceName = SoylentStarter
			Ratio =  0.000000017265625	//0.0000033854166666
        }
        INPUT_RESOURCE
        {
            ResourceName = ElectricCharge
            Ratio = 1.2
        }

		// A comma separated list of resources to output. Same as above
		// but also specify whether it should keep converting if the
		// resource is full (generating excess that will be thrown away).
		//outputResources = Oxygen, 0.001713537562385, false, Water, 0.0000100692708336, false, Food, 0.000016927083333, false
        OUTPUT_RESOURCE
        {
            ResourceName = Oxygen
            Ratio = 0.001713537562385
            DumpExcess = false
        }
        OUTPUT_RESOURCE
        {
            ResourceName = Water
            Ratio = 0.0000100692708336
            DumpExcess = false
        }
        OUTPUT_RESOURCE
        {
            ResourceName = Food
            Ratio = 0.000016927083333
            DumpExcess = false
        }
	}

}
